name: Release

on:
  push:
    branches:
      - master

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          branches: main
          tag_format: v${version}
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  electron:
    needs: versioning
    if: ${{ needs.versioning.outputs.new_release_published == 'true' }}

    name: Desktop app (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13, macos-latest, ubuntu-latest, windows-latest] # macos-13 is the lastest one on x86

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Electron dependencies
        run: npm ci

      - name: "Generate Electron build"
        run: npm run build

      - name: Install & build SvelteKit
        uses: ./.github/actions/install-build-sveltekit
        env:
          APP_VERSION: ${{ needs.versioning.outputs.new_release_version }}

      - name: Build & release Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          CSC_LINK: ${{ secrets.APPLE_CERTIFICATE }}
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: npm run package:electron

  docker:
    needs: versioning
    if: ${{ needs.versioning.outputs.new_release_published == 'true' }}

    name: Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install & build SvelteKit
        uses: ./.github/actions/install-build-sveltekit
        env:
          APP_VERSION: ${{ needs.versioning.outputs.new_release_version }}

      - name: Build & publish
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: canutin
          registry: ghcr.io
          multiPlatform: true
          platform: linux/amd64,linux/arm64
          tags: latest, ${{ needs.versioning.outputs.new_release_version }}
          username: ${{ secrets.GH_REGISTRY_USERNAME }}
          password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
